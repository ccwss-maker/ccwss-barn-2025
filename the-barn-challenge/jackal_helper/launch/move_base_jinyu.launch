<launch>
    <!-- Start the navigation stack -->
    <!-- The configuration files are loaded from jackal_helper -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

        <rosparam file="$(find jackal_helper)/configs/params/costmap_common_params.yaml"
            command="load" ns="global_costmap" />
        <rosparam file="$(find jackal_helper)/configs/params/costmap_common_params.yaml"
            command="load" ns="local_costmap" />

        <rosparam
            file="$(find jackal_helper)/configs/params/odom_nav_params/global_costmap_params.yaml"
            command="load" />
        <rosparam
            file="$(find jackal_helper)/configs/params/odom_nav_params/local_costmap_params.yaml"
            command="load" />
        <rosparam file="$(find jackal_helper)/configs/params/move_base_params.yaml" command="load" />

        <param name="base_global_planner" type="string" value="global_planner/GlobalPlanner" />
        <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS" />
        <remap from="odom" to="odometry/filtered" />
    </node>
    <node pkg="mlda_algo" type="scan_cloud_pub.py" name="scan_cloud_pub"></node>
    <node pkg="mlda_algo" type="controller.py" name="controller"></node>
    <node pkg="mlda_algo" type="local_planner.py" name="local_planner" output="screen"></node>
    <node pkg="mlda_algo" type="astar_replanner.py" name="astar_replanner" output="screen" />


    <include file="$(find local_map)/launch/for_simulation.launch" />
    <node pkg="obs_param" type="obs_kf" output="screen" name="obs_kf" />
</launch>